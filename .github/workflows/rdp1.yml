
name: RDP1
on:
  workflow_dispatch:

jobs:
  rdp:
    runs-on: windows-latest
    timeout-minutes: 360
    steps:
      - name: Enable RDP
        shell: pwsh
        run: |
          try {
            Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
            netsh advfirewall firewall add rule name="RDP" dir=in action=allow protocol=TCP localport=3389 | Out-Null
          } catch {
            Write-Host "❌ Failed to enable RDP: $($_.Exception.Message)"
          }

      - name: Create User
        shell: pwsh
        run: |
          try {
            $username = "RDP1"
            $password = "903834@dD"
            $securePass = ConvertTo-SecureString $password -AsPlainText -Force
            if (-not (Get-LocalUser -Name $username -ErrorAction SilentlyContinue)) {
              New-LocalUser -Name $username -Password $securePass -AccountNeverExpires
            }
            Add-LocalGroupMember -Group Administrators -Member $username -ErrorAction SilentlyContinue
            Add-LocalGroupMember -Group "Remote Desktop Users" -Member $username -ErrorAction SilentlyContinue
            echo "RDP_USER=$username" >> $env:GITHUB_ENV
            echo "RDP_PASSWORD=$password" >> $env:GITHUB_ENV
          } catch {
            Write-Host "❌ Failed to create user: $($_.Exception.Message)"
          }

      - name: Install Python 3.13.7
        shell: pwsh
        run: |
          try {
            $pythonUrl = "https://www.python.org/ftp/python/3.13.7/python-3.13.7-amd64.exe"
            $installer = "$env:TEMP\python-installer.exe"
            Invoke-WebRequest -Uri $pythonUrl -OutFile $installer
            Start-Process -FilePath $installer -ArgumentList "/quiet InstallAllUsers=1 PrependPath=1 Include_test=0" -Wait
            Remove-Item $installer -Force
            python --version
          } catch {
            Write-Host "❌ Python install failed: $($_.Exception.Message)"
          }

      - name: Install VS Code
        shell: pwsh
        run: |
          try {
            $codeUrl = "https://update.code.visualstudio.com/latest/win32-x64-user/stable"
            $codeExe = "$env:TEMP\VSCodeSetup.exe"
            Invoke-WebRequest -Uri $codeUrl -OutFile $codeExe
            Start-Process -FilePath $codeExe -ArgumentList "/verysilent /mergetasks=!runcode" -Wait
            Remove-Item $codeExe -Force
            $code = "$env:LOCALAPPDATA\Programs\Microsoft VS Code\bin\code.cmd"
            if (Test-Path $code) { & $code --version }
            else { Write-Host "❌ VS Code not found after install" }
          } catch {
            Write-Host "❌ VS Code install failed: $($_.Exception.Message)"
          }

      - name: Install Tailscale
        shell: pwsh
        run: |
          try {
            $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
            $installerPath = "$env:TEMP\tailscale.msi"
            Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
            Start-Process msiexec.exe -ArgumentList "/i", "`"$installerPath`"", "/quiet", "/norestart" -Wait
            Remove-Item $installerPath -Force
          } catch {
            Write-Host "❌ Tailscale install failed: $($_.Exception.Message)"
          }

      - name: Connect Tailscale & Fetch IP
        shell: pwsh
        run: |
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=tskey-auth-kU4HtZiURt11CNTRL-vt9ykNmyF2M9EmbZ2Ajm1MR9k4QZ4Uf7T --hostname=gh-runner-${ github.run_id }-rdp1
          $tsIP = $null
          $retries = 0
          while (-not $tsIP -and $retries -lt 18) {
            $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
            if (-not $tsIP) { Start-Sleep -Seconds 5 }
            $retries++
          }
          if (-not $tsIP) {
            Write-Host "❌ No Tailscale IP assigned!"
          } else {
            $tsIP = $tsIP.Trim()
            echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV
            Write-Host "✅ Tailscale IP: $tsIP"
          }

      - name: Show Credentials
        shell: pwsh
        run: |
          Write-Host "=== RDP1 ACCESS ==="
          Write-Host "User: $env:RDP_USER"
          Write-Host "Pass: $env:RDP_PASSWORD"
          Write-Host "IP: $env:TAILSCALE_IP"
